/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.23.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export interface InstantiateMsg {
  members: Member[];
}
export interface Member {
  addr: string;
  weight: number;
}
export type ExecuteMsg = {
  cw4_group_execute: ExecuteMsg1;
} | {
  cw_disbursement_execute: CwDisbursementExecuteMsg;
} | {
  receive: Cw20ReceiveMsg;
} | {
  receive_nft: Cw721ReceiveMsg;
};
export type ExecuteMsg1 = {
  update_admin: {
    admin?: string | null;
  };
} | {
  update_members: {
    add: Member[];
    remove: string[];
  };
} | {
  add_hook: {
    addr: string;
  };
} | {
  remove_hook: {
    addr: string;
  };
};
export type CwDisbursementExecuteMsg = {
  set_disbursement_data: {
    disbursement_data: MemberShare[];
  };
} | {
  receive_native: {
    key?: string | null;
  };
};
export type Uint128 = string;
export type Binary = string;
export interface MemberShare {
  addr: string;
  shares: number;
}
export interface Cw20ReceiveMsg {
  amount: Uint128;
  msg: Binary;
  sender: string;
}
export interface Cw721ReceiveMsg {
  msg: Binary;
  sender: string;
  token_id: string;
}
export type QueryMsg = {
  admin: {};
} | {
  total_weight: {
    at_height?: number | null;
  };
} | {
  list_members: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  dump_state: {};
} | {
  last_updated: {};
} | {
  member: {
    addr: string;
    at_height?: number | null;
  };
} | {
  hooks: {};
} | {
  disbursement_data: {
    key?: string | null;
  };
} | {
  voting_power_at_height: {
    address: string;
    height?: number | null;
  };
} | {
  total_power_at_height: {
    height?: number | null;
  };
} | {
  info: {};
};
export interface MigrateMsg {}
export interface AdminResponse {
  admin?: string | null;
}
export interface DisbursementDataResponse {
  disbursement_data?: DisbursementData | null;
}
export interface DisbursementData {
  members: MemberShare[];
  total_shares: number;
}
export interface DumpStateResponse {
  members: Member[];
  total_weight: number;
}
export interface HooksResponse {
  hooks: string[];
}
export interface InfoResponse {
  info: ContractVersion;
}
export interface ContractVersion {
  contract: string;
  version: string;
}
export type Uint64 = number;
export interface MemberListResponse {
  members: Member[];
}
export interface MemberResponse {
  weight?: number | null;
}
export interface TotalPowerAtHeightResponse {
  height: number;
  power: Uint128;
}
export interface TotalWeightResponse {
  weight: number;
}
export interface VotingPowerAtHeightResponse {
  height: number;
  power: Uint128;
}