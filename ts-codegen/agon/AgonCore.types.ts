/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Admin = {
  address: {
    addr: string;
  };
} | {
  core_module: {};
};
export type Binary = string;
export interface InstantiateMsg {
  competition_modules_instantiate_info: ModuleInstantiateInfo[];
  dao: string;
  rulesets: Ruleset[];
}
export interface ModuleInstantiateInfo {
  admin?: Admin | null;
  code_id: number;
  label: string;
  msg: Binary;
}
export interface Ruleset {
  description: string;
  enabled: boolean;
  rules: string[];
}
export type ExecuteMsg = {
  update_competition_modules: {
    to_add: ModuleInstantiateInfo[];
    to_disable: string[];
  };
} | {
  jail_wager: {
    id: Uint128;
  };
} | {
  create_wager: {
    escrow_code_id: number;
    expiration: Expiration;
    rules: string[];
    ruleset?: Uint128 | null;
    stake: MemberBalance[];
    wager_amount: MemberBalance[];
    wager_dao: WagerDAO;
  };
} | {
  handle_wager: {
    distribution?: MemberShare[] | null;
    id: Uint128;
  };
} | {
  update_rulesets: {
    to_add: Ruleset[];
    to_disable: Uint128[];
  };
};
export type Uint128 = string;
export type Expiration = {
  at_height: number;
} | {
  at_time: Timestamp;
} | {
  never: {};
};
export type Timestamp = Uint64;
export type Uint64 = string;
export type Addr = string;
export type GenericTokenType = "native" | "cw20" | "cw721";
export type WagerDAO = {
  new: {
    dao_code_id: number;
    group_code_id: number;
    members: string[];
    proposal_code_id: number;
  };
} | {
  existing: {
    addr: string;
  };
};
export interface MemberBalance {
  balances: GenericTokenBalance[];
  member: string;
}
export interface GenericTokenBalance {
  addr?: Addr | null;
  amount: Uint128;
  denom?: string | null;
  token_type: GenericTokenType;
}
export interface MemberShare {
  addr: string;
  shares: Uint128;
}
export type QueryMsg = {
  competition_modules: {
    limit?: number | null;
    start_after?: string | null;
  };
} | {
  rulesets: {
    limit?: number | null;
    start_after?: number | null;
  };
} | {
  d_a_o: {};
} | {
  tax: {
    height?: number | null;
  };
} | {
  dump_state: {};
};
export interface MigrateMsg {}
export type ArrayOfCompetitionModule = CompetitionModule[];
export interface CompetitionModule {
  addr: Addr;
}
export interface DumpStateResponse {
  competition_modules: CompetitionModule[];
}
export type ArrayOfRuleset = Ruleset[];
export type Decimal = string;